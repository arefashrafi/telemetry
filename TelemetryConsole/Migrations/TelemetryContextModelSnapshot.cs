// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Telemetry.App;

namespace TelemetryConsole.Migrations
{
    [DbContext(typeof(TelemetryContext))]
    internal class TelemetryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TelemetryDependencies.Models.Bms", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("Current");

                b.Property<int>("CycleTime");

                b.Property<int>("FWVersion");

                b.Property<int>("MCUTemp");

                b.Property<int>("MaxTemp");

                b.Property<int>("MaxTempId");

                b.Property<int>("MaxVolt");

                b.Property<int>("MaxVoltId");

                b.Property<int>("MinTemp");

                b.Property<int>("MinTempId");

                b.Property<int>("MinVolt");

                b.Property<int>("MinVoltId");

                b.Property<int>("RoundtripTm");

                b.Property<int>("Soc");

                b.Property<int>("Status");

                b.Property<string>("Time");

                b.Property<int>("Volt");

                b.HasKey("Id");

                b.ToTable("BatteryManagementSystems");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.Debug", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("ExceptionSource");

                b.Property<string>("Message");

                b.Property<string>("Time");

                b.HasKey("Id");

                b.ToTable("Debugs");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.Error", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("ExceptionSource");

                b.Property<string>("Message");

                b.Property<string>("Time");

                b.HasKey("Id");

                b.ToTable("Errors");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.Gps", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<double>("Accx");

                b.Property<double>("Accy");

                b.Property<double>("Accz");

                b.Property<double>("Alt");

                b.Property<int>("DeviceId");

                b.Property<double>("Dist");

                b.Property<double>("Gpsfix");

                b.Property<double>("Gyrx");

                b.Property<double>("Gyry");

                b.Property<double>("Gyrz");

                b.Property<double>("Heading");

                b.Property<double>("Lat");

                b.Property<double>("Long");

                b.Property<double>("Speed");

                b.Property<double>("Tdist");

                b.Property<string>("TimeStamp");

                b.HasKey("Id");

                b.ToTable("GPSs");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.MPPT", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("ControllerTemp");

                b.Property<int>("DeviceId");

                b.Property<int>("InputCurrent");

                b.Property<int>("InputVoltage");

                b.Property<int>("OutputCurrent");

                b.Property<int>("OutputVoltage");

                b.Property<string>("Time");

                b.HasKey("Id");

                b.ToTable("MPPTs");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.Message", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime>("DateTime");

                b.Property<int>("Length");

                b.Property<int>("MessageId");

                b.Property<string>("Prefix");

                b.Property<string>("Text");

                b.HasKey("Id");

                b.ToTable("Messages");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.Motor", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<int>("BatteryCurrent");

                b.Property<int>("BatteryCurrentDir");

                b.Property<int>("BatteryVoltage");

                b.Property<int>("FailModeInfo");

                b.Property<int>("FailModeInfo2");

                b.Property<int>("Gear");

                b.Property<int>("MotorCurrent");

                b.Property<int>("MotorCurrentDir");

                b.Property<int>("MotorDriveMode");

                b.Property<int>("MotorRpm");

                b.Property<int>("OutputDuty");

                b.Property<int>("OutputDutyType");

                b.Property<int>("PresentCorePos");

                b.Property<int>("TempControl");

                b.Property<int>("TempErrLevel");

                b.Property<int>("TempMotor");

                b.Property<string>("Time");

                b.HasKey("Id");

                b.ToTable("Motors");
            });

            modelBuilder.Entity("TelemetryDependencies.Models.Routenote", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("SqlServer:ValueGenerationStrategy",
                        SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<decimal>("Alt");

                b.Property<decimal>("Dist");

                b.Property<decimal>("Lat");

                b.Property<decimal>("Long");

                b.Property<string>("Time");

                b.Property<int>("UnixTime");

                b.HasKey("Id");

                b.ToTable("Routenotes");
            });
#pragma warning restore 612, 618
        }
    }
}